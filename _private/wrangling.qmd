---
title: "Wrangling"
---

This document does all the data wrangling and pulling data in from R for DATA 202.

```{r setup}
library(tidyverse)

get_out_dir <- function(kind = '') {
  path <- "static/data/"
  if (kind != '') path <- paste0(path, kind, '/')
  out_dir <- here::here(path)
  if (!dir.exists(out_dir)) dir.create(out_dir, recursive = TRUE)
  out_dir
}

get_out_filename <- function(filename, kind = '') {
  paste0(get_out_dir(kind = kind), filename)
}

```

```{r}
library(pins)
board <- board_connect()
```


## bikeshare


```{r wrangle-bikeshare}
# Exercise 1: simplified to total number of rides
daily_rides_all <- read_csv(here::here("data/bikeshare/day.csv"))
daily_rides <- daily_rides_all %>%
  mutate(workingday = as.factor(case_when(
    workingday == 1 ~ "workday",
    TRUE            ~ "weekend"))) %>% 
  select(
    date = dteday,
    day_of_week = weekday,
    workingday,
    total_rides = registered
  )

daily_rides_bytype <- daily_rides_all %>%
  mutate(workingday = case_when(workingday == 1 ~ "workday",
                                          TRUE ~ "weekend"),
         ) %>%
  select(
    date = dteday,
    season,
    year = yr,
    holiday,
    workingday = workingday,
    day_of_week = weekday,
    weather_type = weathersit,
    temp,
    feels_like = atemp,
    humidity = hum,
    wind_speed = windspeed,
    casual,
    registered
  ) %>%
  mutate(
    year = year + 2011,
    holiday = if_else(holiday == 1, "Y", "N"),
    season = c("W", "S", "U", "F")[season],
    temp = temp * (39 + 8) - 8,
    feels_like = feels_like * (50 + 16) - 16,
    wind_speed = wind_speed * 67
    ) %>% 
  pivot_longer(c(casual, registered),
               names_to = "rider_type",
               values_to = "rides") %>% 
  relocate(date, rider_type, rides) %>% 
  mutate(across(c(season, year, holiday, workingday, day_of_week, weather_type, rider_type), as.factor))



pin_write(
  board = board,
  x = daily_rides,
  name = "data202_bikeshare_day_simple_csv",
  type = "csv",
  title = "Capital Bikeshare data, day-level, simplified"
)

pin_write(
  board = board,
  x = daily_rides_bytype,
  name = "data202_bikeshare_day_by_type_csv",
  type = "csv",
  title = "Capital Bikeshare data, day-level, by rider type"
)

#pin_browse(board, "data202_bikeshare_day_simple_csv")
write_csv(daily_rides, get_out_filename("day_simple.csv", kind = 'bikeshare'))
write_csv(daily_rides_bytype, paste0(get_out_dir('bikeshare'), "day_by_type.csv"))
```

## datasaurus

```{r}
library(datasauRus)
write_csv(datasaurus_dozen, paste0(get_out_dir('datasaurus'), 'datasaurus.csv'))
```


## openintro loans (vis-numerical)

```{r}
openxlsx::write.xlsx(
  openintro::loans_full_schema,
  get_out_filename("openintro_loans_full_schema.xlsx")
)
#write_csv(openintro::loans_full_schema, get_out_filename("openintro_loans.csv"))
```

## flights

```{r}
library(nycflights13)
library(arrow)
write_parquet(nycflights13::flights, get_out_filename(kind="nycflights13", filename = "flights.parquet"))
write_parquet(nycflights13::weather, get_out_filename(kind="nycflights13", filename = "weather.parquet"))
write_parquet(nycflights13::planes, get_out_filename(kind="nycflights13", filename = "planes.parquet"))
write_parquet(nycflights13::airports, get_out_filename(kind="nycflights13", filename = "airports.parquet"))
```

## Notable Women

```{r}
notability <- tibble::tribble(
                 ~name,                                                                                              ~known_for,
        "Ada Lovelace",                                                                              "first computer algorithm",
         "Marie Curie", "theory of radioactivity,  discovery of elements polonium and radium, first woman to win a Nobel Prize",
        "Janaki Ammal",                                                               "hybrid species, biodiversity protection",
     "Chien-Shiung Wu",         "confim and refine theory of radioactive beta decy, Wu experiment overturning theory of parity",
   "Katherine Johnson",                  "calculations of orbital mechanics critical to sending the first Americans into space",
          "Vera Rubin",                                                                              "existence of dark matter",
         "Gladys West",      "mathematical modeling of the shape of the Earth which served as the foundation of GPS technology",
  "Flossie Wong-Staal",          "first scientist to clone HIV and create a map of its genes which led to a test for the virus",
     "Jennifer Doudna",             "one of the primary developers of CRISPR, a ground-breaking technology for editing genomes"
  ) %>% arrange(name)

notability_multi <- tibble::tribble(
                 ~name,                                                                                         ~known_for,
        "Ada Lovelace",                                                                         "first computer algorithm",
         "Marie Curie",                                                                          "theory of radioactivity",
         "Marie Curie",                                                        "discovery of elements polonium and radium",
         "Marie Curie",                                                                 "first woman to win a Nobel Prize",
        "Janaki Ammal",                                                                                   "hybrid species",
        "Janaki Ammal",                                                                          "biodiversity protection",
     "Chien-Shiung Wu",                                                "confim and refine theory of radioactive beta decy",
     "Chien-Shiung Wu",                                                       "Wu experiment overturning theory of parity",
   "Katherine Johnson",             "calculations of orbital mechanics critical to sending the first Americans into space",
          "Vera Rubin",                                                                         "existence of dark matter",
         "Gladys West", "mathematical modeling of the shape of the Earth which served as the foundation of GPS technology",
  "Flossie Wong-Staal",     "first scientist to clone HIV and create a map of its genes which led to a test for the virus",
     "Jennifer Doudna",        "one of the primary developers of CRISPR, a ground-breaking technology for editing genomes"
  )

professions <- tibble::tribble(
                 ~name,                          ~profession,
        "Ada Lovelace",                      "Mathematician",
         "Marie Curie",              "Physicist and Chemist",
        "Janaki Ammal",                           "Botanist",
     "Chien-Shiung Wu",                          "Physicist",
   "Katherine Johnson",                      "Mathematician",
   "Rosalind Franklin",                            "Chemist",
          "Vera Rubin",                         "Astronomer",
         "Gladys West",                      "Mathematician",
  "Flossie Wong-Staal", "Virologist and Molecular Biologist",
     "Jennifer Doudna",                         "Biochemist"
  )

professions_multi <- tibble::tribble(
                 ~name,                          ~profession,
        "Ada Lovelace",                      "Mathematician",
         "Marie Curie",              "Physicist",
         "Marie Curie",              "Chemist",
        "Janaki Ammal",                           "Botanist",
     "Chien-Shiung Wu",                          "Physicist",
   "Katherine Johnson",                      "Mathematician",
   "Rosalind Franklin",                            "Chemist",
          "Vera Rubin",                         "Astronomer",
         "Gladys West",                      "Mathematician",
  "Flossie Wong-Staal", "Virologist",
  "Flossie Wong-Staal", "Molecular Biologist",
     "Jennifer Doudna",                         "Biochemist"
  )

dates <- tibble::tribble(
                          ~name, ~birth_year, ~death_year,
                 "Janaki Ammal",       1897L,       1984L,
              "Chien-Shiung Wu",       1912L,       1997L,
            "Katherine Johnson",       1918L,       2020L,
            "Rosalind Franklin",       1920L,       1958L,
                   "Vera Rubin",       1928L,       2016L,
                  "Gladys West",       1930L,          NA,
           "Flossie Wong-Staal",       1947L,          2020L,
              "Jennifer Doudna",       1964L,          NA,
               "Barbara Liskov",       1939L,          NA
           )

write_csv(notability, get_out_filename(kind="notable", filename="notability.csv"))
write_csv(notability_multi, get_out_filename(kind="notable", filename="notability_multi.csv"))
write_csv(professions, get_out_filename(kind="notable", filename="professions.csv"))
write_csv(professions_multi, get_out_filename(kind="notable", filename="professions_multi.csv"))
write_csv(dates, get_out_filename(kind="notable", filename="dates.csv"))
```


## ames

```{r}
ames_home_sales <- read_builtin("ames", package = "modeldata")
write_csv(ames_home_sales, get_out_filename(kind="ames", filename = "ames_home_sales.csv"))
```


## Attacking Discrimination replication

```{r}
set.seed(0)
make_group_rand <- function(n, mean, sd, ...) {
  tibble(score = rnorm(n, mean = mean, sd = sd), ...)
}

# "Deterministic normal": for n points, we expect n * pnorm(x, mu, sd) of them to be below x.
make_group <- function(n, mean, sd, ...) {
  tibble(score = 0:100) %>% 
    mutate(n = floor(n * pnorm(score, mean, sd))) %>% 
    mutate(delta = c(diff(n), 0)) %>% 
    uncount(delta) %>% 
    select(score) %>% 
    mutate(...)
}

people <- bind_rows(
  make_group(150, 60, 10, repay = TRUE),
  make_group(150, 40, 10, repay = FALSE)
)
write_csv(people, get_out_filename(kind="discrim", filename = "people_onegroup.csv"))


people_twoGroups <- bind_rows(
  make_group(150, 70, 7, repay=TRUE, group="blue"),
  make_group(150, 30, 7, repay=FALSE, group="blue"),
  make_group(150, 60, 10, repay=TRUE, group="orange"),
  make_group(150, 40, 10, repay=FALSE, group="orange")
)
write_csv(people_twoGroups, get_out_filename(kind="discrim", filename = "people_two_groups.csv"))

```

